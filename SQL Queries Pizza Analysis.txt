CREATE DATABASE Pizza_Shop_Analysis;
USE Pizza_Shop_Analysis;

-- Pizza details
CREATE TABLE pizzas
(
pizza_id VARCHAR(100) PRIMARY KEY,
pizza_type_id VARCHAR(255),
size VARCHAR(55),
price DECIMAL(10,2)
);

-- Table for pizza types
CREATE TABLE pizza_types (
    pizza_type_id VARCHAR(100) PRIMARY KEY,
    name VARCHAR(255),
    category VARCHAR(50),
    ingredients TEXT
);

-- Table for orders
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    order_date DATE,
    order_time TIME
);

-- Table for order details
CREATE TABLE order_details (
    order_details_id INT PRIMARY KEY,
    order_id INT,
    pizza_id VARCHAR(255),
    quantity INT,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (pizza_id) REFERENCES pizzas(pizza_id)
);



-- Q1) Total pizzas ordered
SELECT COUNT(order_id) AS total_orders
FROM orders;

-- Q2) All available pizza types
SELECT 
    name, 
    category 
FROM 
    pizza_types;

-- Q3) Most ordered pizza
SELECT 
    pizza_id, 
    SUM(quantity) AS total_quantity
FROM 
    order_details
GROUP BY 
    pizza_id
ORDER BY 
    total_quantity DESC
LIMIT 1;


-- Q4) Total revenue generated by each pizza type
SELECT 
    p.pizza_type_id AS pizza_type,
    p.size AS pizza_size,
    SUM(od.quantity * p.price) AS total_revenue
FROM 
    order_details od
JOIN 
    pizzas p ON od.pizza_id = p.pizza_id
GROUP BY 
    p.pizza_type_id, p.size
ORDER BY 
    total_revenue DESC LIMIT 5;
    
-- Q5) Peak sales by Date and Time
SELECT 
    DAYNAME(o.order_date) AS day_of_week,
    HOUR(o.order_time) AS hour_of_day,
    COUNT(od.order_id) AS total_orders
FROM 
    orders o
JOIN 
    order_details od ON o.order_id = od.order_id
GROUP BY 
    day_of_week, hour_of_day
ORDER BY 
    total_orders DESC;

-- Q6) BEst selliong pizza ingredients
SELECT 
    pt.ingredients,
    COUNT(od.pizza_id) AS total_orders
FROM 
    order_details od
JOIN 
    pizzas p ON od.pizza_id = p.pizza_id
JOIN 
    pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY 
    pt.ingredients
ORDER BY 
    total_orders DESC LIMIT 5;
    
-- Q7) Most preferable pizza size ordered by the customers 
SELECT 
    p.size AS pizza_size,
    COUNT(od.order_details_id) AS total_ordered
FROM 
    order_details od
JOIN 
    pizzas p ON od.pizza_id = p.pizza_id
GROUP BY 
    p.size
ORDER BY 
    total_ordered DESC LIMIT 3;

-- Q8) Monthly pizza sales trends
SELECT 
    MONTH(o.order_date) AS month,
    YEAR(o.order_date) AS year,
    COUNT(od.order_id) AS total_orders
FROM 
    orders o
JOIN 
    order_details od ON o.order_id = od.order_id
GROUP BY 
    year, month
ORDER BY 
    year, month;
    
-- Q10) Total rewvenue by pizza cateogry 
SELECT 
    pt.category,
    SUM(od.quantity * p.price) AS total_revenue
FROM 
    order_details od
JOIN 
    pizzas p ON od.pizza_id = p.pizza_id
JOIN 
    pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY 
    pt.category
ORDER BY 
    total_revenue DESC;

-- Q11) Precentage contirbution of each type of pizza 
SELECT 
    p.pizza_type_id AS pizza_type,
    SUM(od.quantity * p.price) AS total_revenue,
    (SUM(od.quantity * p.price) / (SELECT SUM(quantity * price) 
                                   FROM order_details od 
                                   JOIN pizzas p ON od.pizza_id = p.pizza_id)) * 100 AS revenue_percentage
FROM 
    order_details od
JOIN 
    pizzas p ON od.pizza_id = p.pizza_id
GROUP BY 
    p.pizza_type_id
ORDER BY 
    revenue_percentage DESC;

-- Q12) The most expensive pizza
SELECT pizza_types.name, pizzas.price, pizza_types.ingredients
FROM pizza_types
INNER JOIN pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;









